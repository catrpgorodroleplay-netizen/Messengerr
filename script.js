// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
const countries = [
    { code: '7', name: '–†–æ—Å—Å–∏—è', flag: 'üá∑üá∫', pattern: /^(\d{3})(\d{3})(\d{2})(\d{2})$/ },
    { code: '375', name: '–ë–µ–ª–∞—Ä—É—Å—å', flag: 'üáßüáæ', pattern: /^(\d{2})(\d{3})(\d{2})(\d{2})$/ },
    { code: '380', name: '–£–∫—Ä–∞–∏–Ω–∞', flag: 'üá∫üá¶', pattern: /^(\d{2})(\d{3})(\d{2})(\d{2})$/ },
    { code: '77', name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω', flag: 'üá∞üáø', pattern: /^(\d{3})(\d{3})(\d{2})(\d{2})$/ },
    { code: '374', name: '–ê—Ä–º–µ–Ω–∏—è', flag: 'üá¶üá≤', pattern: /^(\d{2})(\d{3})(\d{2})(\d{2})$/ },
    { code: '994', name: '–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω', flag: 'üá¶üáø', pattern: /^(\d{2})(\d{3})(\d{2})(\d{2})$/ },
    { code: '995', name: '–ì—Ä—É–∑–∏—è', flag: 'üá¨üá™', pattern: /^(\d{3})(\d{3})(\d{2})(\d{2})$/ },
    { code: '998', name: '–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω', flag: 'üá∫üáø', pattern: /^(\d{2})(\d{3})(\d{2})(\d{2})$/ }
];

// –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
let currentUser = null;
let contacts = [];

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–ª–∞–≥–∞ —Å—Ç—Ä–∞–Ω—ã
function updateCountryFlag() {
    const select = document.getElementById('country-code');
    const flag = document.getElementById('country-flag');
    const selectedOption = select.options[select.selectedIndex];
    flag.textContent = selectedOption.getAttribute('data-flag');
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
function formatPhoneNumber() {
    const countryCode = document.getElementById('country-code').value;
    const phoneInput = document.getElementById('phone-number');
    let phone = phoneInput.value.replace(/\D/g, '');
    
    const country = countries.find(c => c.code === countryCode);
    if (country && country.pattern) {
        phone = phone.replace(country.pattern, '$1 $2 $3 $4');
    }
    
    phoneInput.value = phone;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
function sendCode() {
    const countryCode = document.getElementById('country-code').value;
    const phoneNumber = document.getElementById('phone-number').value.replace(/\D/g, '');
    const username = document.getElementById('username').value;
    
    if (!phoneNumber) {
        alert('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
        return;
    }
    
    const fullPhone = +${countryCode}${phoneNumber};
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    sessionStorage.setItem('pendingPhone', fullPhone);
    sessionStorage.setItem('pendingUsername', username);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    document.getElementById('verify-phone').textContent = fullPhone;
    showScreen('verify-screen');
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º SMS)
    const testCode = '12345';
    sessionStorage.setItem('verificationCode', testCode);
    alert(–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–¥: ${testCode});
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–æ–¥–∞
function verifyCode() {
    const enteredCode = getEnteredCode();
    const expectedCode = sessionStorage.getItem('verificationCode');
    
    if (enteredCode === expectedCode) {
        showScreen('profile-screen');
    } else {
        alert('–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è');
    }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function completeRegistration() {
    const firstName = document.getElementById('first-name').value;
    const lastName = document.getElementById('last-name').value;
    const phone = sessionStorage.getItem('pendingPhone');
    const username = sessionStorage.getItem('pendingUsername') || user${Date.now()};
    
    currentUser = {
        id: Date.now(),
        phone: phone,
        username: username,
        firstName: firstName,
        lastName: lastName,
        countryCode: phone.split('+')[1].split(' ')[0]
    };
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    localStorage.setItem('currentUser', JSON.stringify(currentUser));
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
    loadSampleContacts();
    
    showScreen('main-screen');
    updateUserInfo();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
function loadSampleContacts() {
    contacts = [
        { id: 1, phone: '+375291234567', name: '–ê–Ω–Ω–∞ (–ë–µ–ª–∞—Ä—É—Å—å)', countryCode: '375', online: true },

{ id: 2, phone: '+380501234567', name: '–ò–≤–∞–Ω (–£–∫—Ä–∞–∏–Ω–∞)', countryCode: '380', online: false },
        { id: 3, phone: '+77471234567', name: '–ê–ª–∏—è (–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω)', countryCode: '77', online: true },
        { id: 4, phone: '+37477123456', name: '–ê—Ä–º–µ–Ω (–ê—Ä–º–µ–Ω–∏—è)', countryCode: '374', online: false },
        { id: 5, phone: '+994501234567', name: '–õ–µ–π–ª–∞ (–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω)', countryCode: '994', online: true }
    ];
    
    renderContacts();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å —Ñ–ª–∞–≥–∞–º–∏
function renderContacts() {
    const contactsList = document.getElementById('contacts-list');
    contactsList.innerHTML = '';
    
    contacts.forEach(contact => {
        const country = countries.find(c => c.code === contact.countryCode);
        const flag = country ? country.flag : 'üåê';
        
        const contactElement = document.createElement('div');
        contactElement.className = 'contact-item';
        contactElement.innerHTML = 
            <div class="contact-flag">${flag}</div>
            <div class="contact-info">
                <div class="contact-name">${contact.name}</div>
                <div class="contact-phone">${contact.phone}</div>
            </div>
            <div class="online-indicator ${contact.online ? 'online' : 'offline'}"></div>
        ;
        
        contactElement.onclick = () => startChat(contact);
        contactsList.appendChild(contactElement);
    });
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function getEnteredCode() {
    return [
        document.getElementById('code-1').value,
        document.getElementById('code-2').value,
        document.getElementById('code-3').value,
        document.getElementById('code-4').value,
        document.getElementById('code-5').value
    ].join('');
}

function moveToNext(current) {
    if (document.getElementById(code-${current}).value.length === 1) {
        if (current < 5) {
            document.getElementById(code-${current + 1}).focus();
        }
    }
}

function showScreen(screenId) {
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    document.getElementById(screenId).classList.add('active');
}

function updateUserInfo() {
    if (currentUser) {
        document.getElementById('current-user-name').textContent = 
            ${currentUser.firstName} ${currentUser.lastName};
        document.getElementById('current-user-phone').textContent = currentUser.phone;
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const savedUser = localStorage.getItem('currentUser');
    if (savedUser) {
        currentUser = JSON.parse(savedUser);
        loadSampleContacts();
        showScreen('main-screen');
        updateUserInfo();
    } else {
        showScreen('auth-screen');
    }
    
    updateCountryFlag();
});
